syntax = "proto3";

package chat_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/sarastee/chat-server/pkg/chat_v1;chat_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat API"
    version: "1.0.0"
    contact: {
      name: "Ilya Lyakhov"
      email: "ilja.sarasti@mail.ru"
    };
  }

  host: "localhost:8082",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service ChatV1 {
  // Creates new chat with requested users
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/chat/v1"
      body: "*"
    };
  };

  // Deletes chat
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/chat/v1"
    };
  };

  // Sends message from user in requested chat
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/chat/v1/send-message"
      body: "*"
    };
  };
}

message CreateRequest {
  // User ID numbers in chat
  repeated int64 userIDs = 1 [(validate.rules).repeated = {unique: true, items: {int64: {gt: 0}}}];
}

message CreateResponse {
  // Chat ID
  int64 id = 1;
}

message DeleteRequest {
  // Chat ID
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message SendMessageRequest {
  // User ID which send message
  int64 from = 1 [(validate.rules).int64.gt = 0];
  // Message text
  string text = 2 [(validate.rules).string = {min_len:1, max_len: 2000}];
  // Message time
  google.protobuf.Timestamp timestamp = 3;
  // Chat ID to which messages are addressed
  int64 toChatId = 4 [(validate.rules).int64.gt = 0];
}
